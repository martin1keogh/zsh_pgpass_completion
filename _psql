#compdef psql

# transform from host:port:db:user:pass
# to "postgresql://user@host:port/db"
#
# if the value of one those 4 is '*' (wilcard)
# it will not appear in the conninfo string
#
# also support giving a database an alias by specifying
# '# alias: <database alias>'
# in the line above the connection info in the .pgpass file.
function pgpass_syntax_to_conninfo {
  awk -F ':' '
    function empty_of_wildcard(param) {
      if (param == "*")
        return ""
      return param
    }

    # matches an database alias definition, we will store this name
    # up until we find the next database connection info
    $1 == "# alias" {
      alias = $2;
      next;
    }

    # 5 or more fields identifies (presumably) a database connection info
    # (more than 5 fields if there are escaped : on this line, eg in the password)
    # TODO: handle escaped colon in fields other than the password (hopefully that
    # is pretty rare though)
    NF >= 5 {
      host = empty_of_wildcard($1);
      port = empty_of_wildcard($2);
      db_name = empty_of_wildcard($3);
      user = empty_of_wildcard($4);

      conninfo = "postgresql\\\://" user "@" host "\\\:" port "/" db_name;

      print conninfo ":" alias;

      alias = "";
    }
  ' ~/.pgpass
}

_complete_databases_from_pgpass() {
  ret=1
  local -a arr

  pgpass_syntax_to_conninfo | while read line; do
    arr+=$line
  done

  _describe -V 'known databases' arr && ret=0
  return ret
}

_complete_databases_from_pgpass
