#compdef psql

# if $1 is equal to '*', returns the empty string
# else returns $1
function empty_of_wildcard {
  if [[ "$1" == '*' ]]; then
    echo ""
  else
    echo "$1"
  fi
}

# transform from host:port:db:user:pass
# to "postgresql://user@host:post/db"
#
# if the value of one those 4 is '*' (wilcard)
# it will not appear in the conninfo string
function pgpass_syntax_to_conninfo {
  # TODO handle escaped ':'
  split_line=($(echo $1 | sed -e 's/:/ /g'))

  host="$(empty_of_wildcard $split_line[1])"
  port="$(empty_of_wildcard $split_line[2])"
  name="$(empty_of_wildcard $split_line[3])"
  user="$(empty_of_wildcard $split_line[4])"

  echo "postgresql\://${user}@${host}\:${port}/${name}"
}

_complete_databases_from_pgpass() {
  ret=1
  local -a arr

  grep -v '^\(#\|$\)' ~/.pgpass | while read -r line; do
    arr+="$(pgpass_syntax_to_conninfo $line):database"
  done

  _describe 'known databases' arr && ret=0
  return ret
}

_complete_databases_from_pgpass
